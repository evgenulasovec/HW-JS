// Задание 1

// Написать функцию, которая принимает два параметра и складывает их.

// Предусмотреть проверку на тип данных. Если хоть один из параметров не является числом, 
// должно выводиться ообщение об ошибке. Также обраьботайте случай, если не было введено два параметра.

// Примеры результатов вызова функции:

// sum(2,4); // 6

// sum('d',4); // введенные данные не являются числами

// sum(1, [2]); // введенные данные не являются числами

// sum(1); // введите два параметра

// sum(); // введите два параметра

//Answer

// const isSum = (par1, par2) => {
//     if (par1 === undefined || par2 === undefined) {
//         console.log('введите два параметра');
//     } else if (typeof par1 !== 'number' || typeof par2 !== 'number') {
//         console.log('введенные данные не являются числами');
//     }
//     else { console.log(par1 + par2) };
// }

// isSum(4,'d');

// Задание 2

// Измените функцию "square" так, чтобы в случае ее вызова без аргумента генерировалась консольная ошибка (console.error):
// "Функция "square" не может быть вызвана без аргумента"


// function square(a) {
//   console.log(a * a)
// }

// square(10) // 100

// square()
// ДО: NaN
// ПОСЛЕ: Uncaught Error: Функция "square" не может быть вызвана без аргумента

//Answer

// function square(a) {
//     if (a === undefined || typeof a !== 'number') {
// console.error('Uncaught Error: Функция "square" не может быть вызвана без аргумента');
//     }   else console.log(a * a);
//   }

//   square(10) 

//   square()


// Задание 3

// Создать функцию "угадай число". Она принимает число от 1 до 10 (обязательно проверить, что число не больше 10 и не меньше 0). Генерирует рандомное число от 1 до 10 и сравнивает с заданным числом.
// Если они совпали, то возвращает “Вы выиграли”, если нет - то “Вы не угадали, ваше число -  ...,  а выпало число ...”
// Функция создания случайного числа уже была ранее в материалах, в задаче по созданию случайного цвета.
// Написать функцию в стрелочном синтаксисе.

//Answer

// function getRandomInteger(min, max) {
//     return Math.floor(Math.random() * (max - min)) + min;
//     }
//    let a = getRandomInteger (1, 10);

// const guessTheNumber = (num) => {
//       if (num <= 0 || num > 10 ) {
//         console.error ('введено некорректное число');
//       } else if (num == a) {
//         console.log ('You win!!!');
//       } else console.log (`Вы не угадали, ваше число - ${num},  а выпало число ${a}`);
// }
// guessTheNumber(11);

// Задание 4

// Напишите функцию copyArr(arr), которая копирует массив,
//  не изменяя оригинал. Используйте подходящий метод массива - forEach или map.

// Answer
// forEach

// arr = ['a', 14, {name: 'Evgen', age: 30}, 165, 'asd'];
// copyArr =[];
// arr.forEach(element =>copyArr.push (element));
// console.log(copyArr);

// map

// arr = ['a', 14, {name: 'Evgen', age: 30}, 165, 'asd'];
// const copyArr = arr.map (item => item);
// console.log (copyArr); 



// Задание 5

// Создайте функцию sumObjectValues, которая будет суммировать все значения свойств,
//  которые являются числами. Сумму чисел необходимо вернуть из функции.

// Проверить работу функции можно на объекте:

// const objectWithNumbers = {
//   a: 10,
//   b: 20,
//   c: 'string',
//   d: 12,
// }

// Answer

// objectWithNumbers = {
//     a: 10,
//     b: 20,
//     c: 'string',
//     d: 12,
//   }

//   const sumObjectValues = (obj) => {
//   let sum = 0;
//   for (let key in obj) {
//     if (typeof obj[key] === 'number') {
//         sum += obj[key];
//     }
//   }
//   return (sum); 
// }
// console.log(sumObjectValues( objectWithNumbers));


// Задание 6

// Напишите функцию ucFirst(str), возвращающую строку str с заглавным 
// первым символом.

// Вам понадобятся методы строк.

//Answer

// const ucFirst  =  str  =>  str[0].toUpperCase() + str.slice(1); 

// console.log(ucFirst ('hello'));

// Задание 7

// Напишите функцию checkSpam(str), возвращающую true,
// если str содержит 'badWord' или 'XXX', а иначе false.
// Функция должна быть нечувствительна к регистру.

//Answer

// const checkSpam = str => {
// let str1 = str.toLowerCase();
//     if (str1.includes('badWord'.toLowerCase()) || str1.includes('XXX'.toLowerCase())) {
//         return true;
//     } else return false;
// }

// const res1 = checkSpam('sdsdfsdf df s BadsoRd');
// const res2 = checkSpam('sdsdfsdf df s badWdord XxX');
// const res3 = checkSpam('sd Xx sdfsdf df s bsadWord');

// console.log (res1, res2, res3);

// Задание 8

// Написать функцию, которой на вход подается строка, на выход она дает символы 
// наоборот (разворачивает строку). Пример: «привет, Женя» -> «янеЖ ,тевирп»

// Обратите внимание: метод reverse существует только у массивов.


// Answer

// let string = '"привет, Женя"';
// let arr = string.split('');
// console.log (arr.reverse('').join(''));


// Задание 9

// Массив содержит строки с информацией о железнодорожных станциях на севере Англии. 
// Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, 
// за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. 

// let stations = [

// 'MAN675847583748sjt567654;Manchester Piccadilly',

// 'GNF576746573fhdg4737dh4;Greenfield',

// 'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',

// 'SYB4f65hf75f736463;Stalybridge',

// 'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'

// ];

// Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:

// MAN: Manchester Piccadilly

// Вывести эти строки в консоль

// ПОДСКАЗКА:

// 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
// 2. Найдите номер символьного номера точки с запятой.
// 3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
// 4. Объедините две новые переменные и строк


//Answer

// let stations = [

//     'MAN675847583748sjt567654;Manchester Piccadilly',

//     'GNF576746573fhdg4737dh4;Greenfield',

//     'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',

//     'SYB4f65hf75f736463;Stalybridge',

//     'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'

//     ];

//     stations.forEach (function (item) {
//     let str = item.slice(0, 3);
//     let index = item.indexOf(';');
//     console.log (`${str} : ${item.slice(index +1)}`);   
//     })

// Задание 10

// Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, 
// содержащий только уникальные элементы arr.

// Пример:

// let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];

// console.log(unique(strings) ); должен вывести "кришна, харе, :-O"



// ПОДСКАЗКА

// - создать новый массив

// - обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. 
// Таким образом в новый добавятся только уникальные.


//Answer

// let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];

// const unique = arr => {
//     let newStrings=[];
//     for (let str of strings) {
//         if (!newStrings.includes(str)){
//             newStrings.push(str);
//         }

//     }
//     return (newStrings);
// }
// console.log (unique(strings));


// Задание 11

// Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.
// Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.
// Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:
// 1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.
// 2. Создайте общий массив с данными Жени (исправленными) и Юли.
// 3. Для каждой кошки этого общего массива выведите в консоль текст:
// - если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет
// - если котёнок - Кошка № 2 ещё котёнок
// 4. Вызовите функцию для двух наборов тестовых данных.
// Тестовые данные:
// 1.  Данные Жени [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]
// Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]
// 2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]
// Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]

// В задании необходимо использовать методы массивов: forEach, slice, concat

//Answer

// const verifyCats = (array1, array2) => {
//     const newArray1 = array1.slice (1,array1.length - 1);
//     const allCats = newArray1.concat(array2);
//     allCats.forEach((element,index) => {
//         if (element >=2 ){
//             console.log(`Кошка № ${index + 1} взрослая, ей ${element} лет`)
//         } else {
//      console.log (`Кошка № ${index + 1} ещё котёнок`);
//         }

//     });
//     }

//     let catsResult1 = verifyCats ([4, 5, 3, 11, 6, 2, 4, 1, 5, 9],  [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]);
//     let catsResult2 = verifyCats ( [3, 5, 9, 14, 1, 2, 6, 8, 3, 10],  [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]);


// Задание 12

// Решить 4 задание из прошлой темы, используя метод filter

// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, 
// но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

// Задание 12

// Решить 4 задание из прошлой темы, используя метод filter

// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

//Answer

// let arr = [5, 4, 3, 8, 0];

// const filterFor = (array, a) => {
//     newArr = array.filter(item => item >= a)
//     return newArr;
// }
// console.log(filterFor(arr,5));
// console.log(filterFor(arr,10));
// console.log(filterFor(arr,3.11));


// Задание 13

// Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. 
// Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what'].

//Answer

// let arr = ['yes', 'hello', 'no', 'easycode', 'what'];
// const filterFor = array => {
//     newArr = array.filter(item => item.length > 3)
//     return newArr;
// }
// console.log(filterFor(arr));


// Задание 14

// Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы 
// (размер массива определяется его длиной): [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ]

// ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой
// a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, 
// сами являются массивами и обладают всеми свойствами массивов.

//Answer

// let arr = [ [14, 45], [1], ['a', 'c'], ['a', 'e', 'w', 'q'], [1,3,5,6,7,8,3], [2], [0, 's'] ] ;
// const sortedArr = arr.sort((a,b) => a.length - b.length);
// console.log (sortedArr);



// Задание 15

// Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges)
//  и выполняет следующие действия по порядку:

// 1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, 
// человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7. 
// (сделать через map)
// 2. Исключает всех кошек младше 18 человеческих лет. (сделать через filter)
// 3. Возвращает средний человеческий возраст для всех взрослых кошек. (сумму для среднего посчитать через reduce)
// Вызовите функцию для обоих наборов тестовых данных.
// Тестовые данные:
// 1: [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]
// 2: [1, 16, 12, 4, 5, 1, 3, 11, 7, 2]

// В задании необходимо использовать методы массивов: map, filter, reduce


//Answer

// const getAverageHumanAge = catAges => {
//   const humanAges = catAges.map(age => age <= 2 ? age * 10 : age * 7);
//   const adultHumanAges = humanAges.filter(age => age >= 18); 
//   const sum = adultHumanAges.reduce((acc, age) => acc + age, 0); 
//   const average = sum / adultHumanAges.length;
//   return average;
// }

// console.log(getAverageHumanAge([7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]));
// console.log(getAverageHumanAge([1, 16, 12, 4, 5, 1, 3, 11, 7, 2]));